import cv2
import numpy as np

# Resmi iÃ§e aktar
img = cv2.imread(r"C:\Users\MUSA\Desktop\OpenCV\Perspektif_Carpitma\perspektif.jpg")

# Resmin yÃ¼klendiÄŸini kontrol et
if img is None:
    print("HATA: Resim yÃ¼klenemedi! Dosya yolunu kontrol et.")
else:
    cv2.imshow("Orijinal", img)

    """
    EÄŸer img deÄŸiÅŸkeni None ise, resmin yÃ¼klenemediÄŸini yazdirir ve program Ã§aliÅŸmaya devam etmez.
    EÄŸer resim doÄŸru yÃ¼klenmiÅŸse, orijinal resmi ekranda gÃ¶sterir.
    """

    # Yeni geniÅŸlik ve yÃ¼kseklik deÄŸerleri
    width = 200
    height = 300

    # Perspektif dÃ¶nÃ¼ÅŸÃ¼mÃ¼ iÃ§in noktalar
    pts1 = np.float32([[119,1], [310,302], [414,871], [545,371]])
    pts2 = np.float32([[0,0], [0,height], [width,0], [width,height]])

    """
    pts1: Orijinal resimdeki 4 noktayi tanimlar.
    pts2: Bu noktalarin dÃ¶nÃ¼ÅŸtÃ¼rÃ¼ldÃ¼kten sonra yerleÅŸtirileceÄŸi yeni konumlari tanimlar.
    ğŸ“Œ Ã–rnek AÃ§iklama:

    Orijinal resimdeki noktalar (pts1)
    (139,1) â†’ Yeni resimde (0,0) olacak
    (30,302) â†’ Yeni resimde (0,500) olacak
    (34,871) â†’ Yeni resimde (400,0) olacak
    (245,371) â†’ Yeni resimde (400,500) olacak
    Bu noktalar sayesinde perspektif bozulmasini dÃ¼zelteceÄŸiz.
    """

    # Perspektif dÃ¶nÃ¼ÅŸÃ¼m matrisini hesapla
    matrix = cv2.getPerspectiveTransform(pts1, pts2)
    print("DÃ¶nÃ¼ÅŸÃ¼m Matrisi:\n", matrix)

    """
    cv2.getPerspectiveTransform(pts1, pts2), yukarida seÃ§tiÄŸimiz noktalar arasindaki dÃ¶nÃ¼ÅŸÃ¼m matrisini hesaplar.
    Bu matris, perspektif dÃ¶nÃ¼ÅŸÃ¼mÃ¼ iÃ§in gereklidir ve gÃ¶rÃ¼ntÃ¼ye uygulanacaktir.
    """

    # Nihai dÃ¶nÃ¼ÅŸtÃ¼rÃ¼lmÃ¼ÅŸ resmi oluÅŸtur
    imgOutput = cv2.warpPerspective(img, matrix, (width, height))  

    """
    cv2.warpPerspective() fonksiyonu ile dÃ¶nÃ¼ÅŸÃ¼m matrisini resme uyguluyoruz.
    SonuÃ§ olarak, perspektifi dÃ¼zeltilmiÅŸ yeni bir gÃ¶rÃ¼ntÃ¼ elde ediyoruz.

    """

    # Ã‡Ä±ktÄ± resmini gÃ¶ster
    cv2.imshow("Nihai Resim", imgOutput)

    """
    Yeni dÃ¶nÃ¼ÅŸtÃ¼rÃ¼lmÃ¼ÅŸ perspektifi dÃ¼zeltilmiÅŸ resmi ekranda gÃ¶sterir.
    """

    # Pencerelerin aÃ§Ä±k kalmasÄ±nÄ± saÄŸla
    cv2.waitKey(0)  
    cv2.destroyAllWindows()

    """
    cv2.waitKey(0) â†’ Bir tuÅŸa basilana kadar pencerenin aÃ§ik kalmasini saÄŸlar.
    cv2.destroyAllWindows() â†’ TÃ¼m OpenCV pencerelerini kapatir.
    """


    """
    Resmi yÃ¼kler ve kontrol eder.
    Perspektif dÃ¶nÃ¼ÅŸÃ¼mÃ¼ iÃ§in 4 nokta seÃ§er.
    DÃ¶nÃ¼ÅŸÃ¼m matrisini hesaplar.
    cv2.warpPerspective() ile perspektifi dÃ¼zeltir.
    Yeni perspektif dÃ¼zeltilmiÅŸ gÃ¶rÃ¼ntÃ¼yÃ¼ gÃ¶sterir.
    
    ğŸ›  Ã–rnek Durum:
    EÄŸik bir kaÄŸidi ya da kimliÄŸi dÃ¼zgÃ¼n hale getirmek iÃ§in kullanilabilir.
    Bir tabelayi dÃ¼z hale getirmek iÃ§in kullanabiliriz.
    """