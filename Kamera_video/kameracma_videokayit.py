import cv2

# KamerayÄ± baÅŸlat
cap = cv2.VideoCapture(0)
"""
cv2.VideoCapture(0) ile varsayilan web kamerasini aÃ§iyoruz.
0, sistemdeki ilk (birincil) kamerayi ifade eder. EÄŸer baÅŸka 
bir kamera baÄŸladiysan 1, 2 gibi deÄŸerler deneyebilirsin.
"""

# Kamera aÃ§Ä±ldÄ± mÄ± kontrol et
if not cap.isOpened():
    print("Kamera aÃ§ilamadi!")
    exit()

"""
cap.isOpened() fonksiyonu, kameranin baÅŸarili bir ÅŸekilde aÃ§ilip aÃ§ilmadiÄŸini kontrol eder.
EÄŸer kamera aÃ§ilmazsa, "Kamera aÃ§ilamadi!" mesaji yazdirilir ve exit() komutu ile program sonlandirilir.
"""

# Ã‡Ã¶zÃ¼nÃ¼rlÃ¼k bilgilerini al
width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
print(f"Video Ã§Ã¶zÃ¼nÃ¼rlÃ¼ÄŸÃ¼: {width}x{height}")

"""
cap.get(cv2.CAP_PROP_FRAME_WIDTH) â†’ Videonun geniÅŸliÄŸini alir.
cap.get(cv2.CAP_PROP_FRAME_HEIGHT) â†’ Videonun yÃ¼ksekliÄŸini alir.
print(f"Video Ã§Ã¶zÃ¼nÃ¼rlÃ¼ÄŸÃ¼: {width}x{height}") â†’ Ã‡Ã¶zÃ¼nÃ¼rlÃ¼ÄŸÃ¼ ekrana yazdirir.
"""

# Video kaydedici baÅŸlat
fourcc = cv2.VideoWriter_fourcc(*"XVID")  # Daha uyumlu codec
writer = cv2.VideoWriter("video_kaydi.mp4", fourcc, 20, (width, height))

"""
cv2.VideoWriter_fourcc(*"XVID") â†’ Videoyu sikiÅŸtirmak iÃ§in kullanilan codec (kodlayici) tÃ¼rÃ¼nÃ¼ belirler. "XVID" codec'i, .mp4 formati ile daha uyumlu Ã§aliÅŸir.
cv2.VideoWriter() â†’ Videoyu dosyaya yazmak iÃ§in kullanilan fonksiyondur.
"video_kaydi.mp4" â†’ Kaydedilecek dosyanin adi.
fourcc â†’ Belirlenen codec tÃ¼rÃ¼.
20 â†’ FPS (Frame Per Second - Saniyedeki kare sayisi).
(width, height) â†’ Videonun boyutlari.
"""

try:
    while True:
        ret, frame = cap.read()

        """
        cap.read() â†’ Kameradan bir kare okur.
        ret â†’ Okuma iÅŸlemi baÅŸarili olduysa True, baÅŸarisiz olduysa False dÃ¶ner.
        frame â†’ Okunan kareyi iÃ§erir.
        """

        if not ret:
            print("Kare okunamadi, Ã§ikiliyor...")
            break
        
        """
        EÄŸer ret deÄŸeri False olursa, gÃ¶rÃ¼ntÃ¼ alinamamiÅŸ demektir. Bu durumda
        "Kare okunamadi, Ã§ikiliyor..." mesaji yazdirilir ve dÃ¶ngÃ¼ kirilir (break).
        """

        cv2.imshow("Video", frame)
        
        """
        cv2.imshow("Video", frame) â†’ Alinan kareyi "Video" isimli bir pencerede gÃ¶sterir.
        """

        # Videoyu kaydet
        writer.write(frame)

        """
        writer.write(frame) â†’ Okunan kareyi video dosyasina ekler.
        """

        # 'q' tuÅŸuna basÄ±ldÄ±ÄŸÄ±nda Ã§Ä±k
        if cv2.waitKey(1) & 0xFF == ord("q"):
            break

        """
        cv2.waitKey(1) â†’ Klavyeden bir tuÅŸa basilmasini bekler (1 ms gecikme ile).
        & 0xFF == ord("q") â†’ EÄŸer q tuÅŸuna basilirsa, dÃ¶ngÃ¼yÃ¼ kir (break).
        """

except Exception as e:

    print(f"Hata oluÅŸtu: {e}")

    """
    Bir hata oluÅŸursa, program Ã§Ã¶kmek yerine "Hata oluÅŸtu: {e}" mesaji ile hata sebebini ekrana yazdirir.
    """

finally:
    # KaynaklarÄ± serbest bÄ±rak
    cap.release()
    writer.release()
    cv2.destroyAllWindows()

    """
    cap.release() â†’ Kamerayi kapatir.
    riter.release() â†’ Video kaydetmeyi durdurur ve dosyayi kapatir.
    cv2.destroyAllWindows() â†’ AÃ§ik tÃ¼m OpenCV pencerelerini kapatir.
    """


"""
ğŸ“Œ SonuÃ§
âœ… Kamera aÃ§ilir ve Ã§Ã¶zÃ¼nÃ¼rlÃ¼k bilgisi ekrana yazdirilir.
âœ… Kamera gÃ¶rÃ¼ntÃ¼sÃ¼ alinir ve gÃ¶sterilir.
âœ… Video dosyaya kaydedilir (video_kaydi.mp4).
âœ… q tuÅŸuna basildiÄŸinda Ã§ikiÅŸ yapilir.
âœ… Hata durumunda program Ã§Ã¶kmek yerine uyari verir ve gÃ¼venli ÅŸekilde kapanir.
"""    
